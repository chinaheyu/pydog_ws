<launch>
    <arg name="robot_name"         default="/"/>
    <arg name="rviz"               default="true"/>
    <arg name="lite"               default="false" />
    <arg name="ros_control_file"   default="$(find champ_config)/config/ros_control/ros_control.yaml" />
    <arg name="gazebo_world"       default="$(find champ_config)/worlds/outdoor.world" />
    <arg name="gui"                default="true"/>
    <arg name="world_init_x"       default="0.0" />
    <arg name="world_init_y"       default="0.0" />
    <arg name="world_init_heading" default="0.0" />
    <arg name="gazebo"                 value="true"/>
    <arg name="joint_controller_topic" value="joint_group_position_controller/command"/>
    <arg name="hardware_connected"     value="false"/>
    <arg name="publish_foot_contacts"  value="false"/>
    <arg name="close_loop_odom"        value="true"/>
    <arg name="joints_map_file"        default="$(find champ_config)/config/joints/joints.yaml"/>
    <arg name="links_map_file"         default="$(find champ_config)/config/links/links.yaml"/>
    <arg name="gait_config_file"       default="$(find champ_config)/config/gait/gait.yaml"/>
    <arg name="description_file"       default="$(find champ_description)/urdf/champ.urdf"/>
    <arg name="laser"                  default="sim" />
    <arg name="publish_joint_control"  default="true" />
    <arg name="base_frame"             default="base_link" />

    <arg if="$(eval arg('robot_name') == '/')"  name="frame_prefix" value="" />
    <arg unless="$(eval arg('robot_name') == '/')" name="frame_prefix" value="$(arg robot_name)/" />

    <param name="use_sim_time" value="true" />

    <include file="$(find champ_gazebo)/launch/gazebo.launch">
        <arg name="robot_name"         value="$(arg robot_name)"/>
        <arg name="lite"               value="$(arg lite)"/>
        <arg name="ros_control_file"   value="$(arg ros_control_file)"/>
        <arg name="gazebo_world"       value="$(arg gazebo_world)"/>
        <arg name="world_init_x"       value="$(arg world_init_x)" />
        <arg name="world_init_y"       value="$(arg world_init_y)" />
        <arg name="world_init_heading" value="$(arg world_init_heading)" />
        <arg name="gui"                value="$(arg gui)" />
    </include>

    <group ns="$(arg robot_name)">
        <param name="tf_prefix" value="$(arg robot_name)"/>
        <param if="$(arg gazebo)" name="use_sim_time" value="true"/>

        <!-- ==================== LOAD PARAMETERS ==================== -->
        <include file="$(find champ_description)/launch/description.launch">
            <arg name="description_file" value="$(arg description_file)"/>
        </include>
        <rosparam command="load" ns="gait"       file="$(arg gait_config_file)" />
        <rosparam command="load" ns="links_map"  file="$(arg links_map_file)" />
        <rosparam command="load" ns="joints_map" file="$(arg joints_map_file)" />


        <!-- ==================== HARDWARE ==================== -->
        <include file="$(find champ_bringup)/launch/include/laser/$(arg laser).launch" />

        <node if="$(arg lite)" pkg="rosserial_python" name="rosserial_champ" type="serial_node.py" output="screen" respawn="true">
            <param name="port" value="/dev/ttyACM0" />
            <param name="baud" value="500000" />
        </node>

        <node if="$(arg lite)" pkg="champ_base" name="message_relay" type="message_relay_node" output="screen">
            <param                        name="gazebo"  value="$(arg gazebo)" />
            <param if="$(arg gazebo)"     name="has_imu" value="false"/>       
            <param unless="$(arg gazebo)" name="has_imu" value="$(arg has_imu)"/>       
        </node>

        <!-- ==================== CONTROLLER ==================== -->
        <include file="$(find champ_bringup)/launch/include/velocity_smoother.launch" />

        <node unless="$(arg lite)" pkg="champ_base" name="champ_controller" type="quadruped_controller_node" output="screen">
            <param                                    name="gazebo"                 value="$(arg gazebo)" />
            <param if="$(arg hardware_connected)"     name="publish_joint_states"   value="false" />
            <param unless="$(arg hardware_connected)" name="publish_joint_states"   value="true" />
            <param                                    name="publish_foot_contacts"  value="$(arg publish_foot_contacts)" />
            <param                                    name="publish_joint_control"  value="$(arg publish_joint_control)" />
            <param                                    name="joint_controller_topic" value="$(arg joint_controller_topic)" />
        </node>

        <!-- ==================== STATE ESTIMATION ==================== -->
        <node pkg="champ_base" name="state_estimator" type="state_estimation_node" output="screen">
            <param if="$(arg hardware_connected)" name="orientation_from_imu" value="true"/>
            <param if="$(arg gazebo)" name="orientation_from_imu" value="true"/>            
        </node>

        <node pkg="robot_localization" type="ekf_localization_node" name="base_to_footprint_ekf"> 
            <remap from="odometry/filtered" to="odom/local" />
            <param name="base_link_frame" value="$(arg base_frame)" />
            <rosparam command="load" file="$(find champ_base)/config/ekf/base_to_footprint.yaml" />
        </node>

        <node pkg="robot_localization" type="ekf_localization_node" name="footprint_to_odom_ekf"> 
            <remap from="odometry/filtered" to="odom" />
            <rosparam command="load" file="$(find champ_base)/config/ekf/footprint_to_odom.yaml" />
        </node>

        <include file="$(find champ_config)/launch/include/gmapping.launch">
            <arg name="frame_prefix" value="$(arg frame_prefix)"/>
        </include>

        <!-- Calls navigation stack packages -->
        <!-- <include file="$(find champ_config)/launch/include/move_base.launch">
            <arg name="frame_prefix" value="$(arg frame_prefix)"/>
            <arg name="robot_name"   value="$(arg robot_name)"/>
        </include> -->
        <include file="$(find pydog_bringup)/launch/include/move_base.launch" />
        
        <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz"
            args="-d $(find champ_navigation)/rviz/navigate.rviz -f $(arg frame_prefix)map"
            output="screen"/>
    </group>
</launch>